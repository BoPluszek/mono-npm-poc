name: react-package-create-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
        - premajor
        - preminor
        - prepatch
        - prerelease
      component:
        description: 'component'
        required: true
        type: choice
        options:
        - al-spinner
        - al-version-footer

jobs:
  preparepr:
    name: Validate build and Prepare PR
    runs-on: ubuntu-latest
    steps:
      - name: Output event for debug
        run: echo "${{ toJSON(github.event) }}"

      - name: Output current user
        run: echo "${{ toJSON(github.event.sender.login) }}"

      - uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git branch release/${{inputs.component}}/${{github.run_id}}
      
      - name: Build components
        run: |
          cd al-react-components
          # yarn
          # yarn workspaces run build
      
      - name: Bump version
        run: |
          cd al-react-components/${{inputs.component}}
          yarn config set version-tag-prefix "${{ inputs.component }}/v"
          yarn config set version-git-message "Release: React component ${{inputs.component}} v%s"
          yarn version --${{inputs.version}} 
      
      - name: Get version
        id: read_version
        uses:  ashley-taylor/read-json-property-action@v1.0
        with:
          path: al-react-components/${{inputs.component}}/package.json
          property: version    

      - name: Echo version
        run: |
          echo detected version ${{steps.read_version.outputs.value}}
 
      - name: Prepare branch for PR
        run: |
          git branch -m release/${{inputs.component}}/${{steps.read_version.outputs.value}}
          git push origin HEAD

        #PRs created using secrets.GITHUB_TOKEN, will NOT trigger any actions. So instead we create an app, and use its token
        #https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#authenticating-with-github-app-generated-tokens
      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.PRCREATIONBOTAPPID }}
          private_key: ${{ secrets.PRCREATIONBOTSECRET }}

      - name: Create PR
        #https://github.com/marketplace/actions/github-action-for-creating-pull-requests
        uses: devops-infra/action-pull-request@v0.5.3
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          github_token: ${{ steps.generate-token.outputs.token }}
          # source_branch: release/${{inputs.component}}/${{steps.read_version.outputs.value}}
          target_branch: main
          title: "Release: React component ${{inputs.component}} v${{steps.read_version.outputs.value}}"
          # template: .github/PULL_REQUEST_TEMPLATE.md
          # body: "**Automated pull request**"
          # reviewer: ${{github.event.sender.login}}
          assignee: ${{github.event.sender.login}}
          label: release
          # milestone: My milestone
          draft: false
          # old_string: "<!-- Add your description here -->"
          # new_string: "** Automatic pull request**"
          # get_diff: true
          # ignore_users: "dependabot"
          # allow_no_diff: false
          
          